# This is an example to show how to use Logstash generator plugin to generate random testing data for testing purposes
# For continous generation of sample data, we can have two pipelines - one is generator pipeline and the other is extract 
# pipeline. The generator pipeline generates event and output to Elasticsearch, and the extract pipeline picks up events 
# from Elasticsearch and output to ADX.

input {
  
  # Here we use generator plugin. We can also use java_generator plugin that provides eps (events per second) option.
  generator {
    message => '{"OriginTag.Azure.VmId": "18aac3c6-8402-11ee-b962-0242ac120002", "OriginTag.Azure.SubscriptionId": "18aac65a-8402-11ee-b962-0242ac120002", "OriginTag.Azure.ResourceGroup": "cassandra-demo-nodepools-northcentralus", "Machine.MachineName": "aks-npsystem-17591575-vmss000001", "Network.SumBytes": 10000, "Network.CountTcpHandshakes": 1000, "Network.SumRetransmitSyns": 100, "Network.SumConnectionsReset": 10 }'
    count => 1
  }
}

filter {
  json {
    source => "message"
  }
  ruby {
    code => "
    event.set('Time', Time.now.utc.iso8601)
    # TODO - Modify it to add randomness
    # event.set('Machine.MachineName', event.get('MachineName'))
    "
  }
}

output {
  stdout {codec => rubydebug }
  
  elasticsearch {
    hosts => "${ELASTIC_SEARCH_ENDPOINT}"
    index => "${ELASTIC_SEARCH_TARGET_INDEX}"
  }
}

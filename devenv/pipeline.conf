input {
  elasticsearch {
    hosts => "${ELASTIC_SEARCH_ENDPOINT}"
    index => "${ELASTIC_SEARCH_TARGET_INDEX}"
    user => "${ELASTIC_SEARCH_USERNAME}"
    password => "${ELASTIC_SEARCH_PASSWORD}"

    # Query every 2 minutes
    #query => '{"_source": ["Time", "OriginTag.Azure.VmId", "OriginTag.Azure.SubscriptionId", "OriginTag.Azure.ResourceGroup", "Machine.MachineName", "Network.SumBytes", "Network.CountTcpHandshakes", "Network.SumRetransmitSyns", "Network.SumConnectionsReset"], "query":{"range": {"Time":{"gte": "now-2m/m", "lt": "now/m"}}}}'
    query => '{"_source": ["Time", "OriginTag.Azure.VmId", "OriginTag.Azure.SubscriptionId", "OriginTag.Azure.ResourceGroup", "Machine.MachineName", "Network.SumBytes", "Network.CountTcpHandshakes", "Network.SumRetransmitSyns", "Network.SumConnectionsReset"], "query":{"range": {"Time":{"gte": "now-90d/d", "lt": "now/d"}}}}'

    # Comment out the above query and use the following query for using local ElasticSearch test instance
    #query => '{"_source": ["Time", "OriginTag.Azure.VmId", "OriginTag.Azure.SubscriptionId", "OriginTag.Azure.ResourceGroup", "Machine.MachineName", "Network.SumBytes", "Network.CountTcpHandshakes", "Network.SumRetransmitSyns", "Network.SumConnectionsReset"]}'

    # Run every 2 minutes within every hour - minute 2, 4, 6....so on
    #schedule => "0 */2 * * * *"
  }
}

filter {
  mutate {
    add_field => {"ResourceId" => "/subscriptions/%{OriginTag.Azure.SubscriptionId}/resourceGroups/%{OriginTag.Azure.ResourceGroup}/providers/Microsoft.Compute/virtualMachines/%{Machine.MachineName}"}
    remove_field => ["OriginTag.Azure.SubscriptionId"]
    remove_field => ["OriginTag.Azure.ResourceGroup"]
    remove_field => ["Machine.MachineName"]

    # ADX does not like the "." notation fo ingestion json mapping
    rename  => {"OriginTag.Azure.VmId" => "VmId"}
    rename => {"Network.SumBytes" => "SumBytes"}
    rename => {"Network.SumConnectionsReset" => "SumConnectionsReset"}
    rename => {"Network.CountTcpHandshakes" => "CountTcpHandshakes"}
    rename => {"Network.SumRetransmitSyns" => "SumRetransmitSyns"}
  }
}

output {
  stdout {codec => rubydebug }
}